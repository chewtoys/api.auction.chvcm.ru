language: node_js
node_js:
- 'node'
- 'lts/*'
cache:
  yarn: true
sudo: required
dist: trusty

services:
- docker

env:
  global:
  # CI
  - RELEBOX_BUCKET_NAME="$TRAVIS_REPO_SLUG/travis-$TRAVIS_BUILD_ID"
  # Node.js
  - NODE_ENV=staging
  # @alendo/recaptcha
  - RECAPTCHA_SECRET=google
  # DB
  - REDIS_URL=redis://localhost:6379
  - DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres
  - DATABASE_NATIVE=true
  - DATABASE_POOL_MAX_WEB=10
  - DATABASE_POOL_MAX_WORKER=10
  - AWS_ENDPOINT=http://localhost:4567
  - AWS_ACCESS_KEY_ID=key
  - AWS_SECRET_ACCESS_KEY=secret
  - AWS_S3_BUCKET=api.auction.chvcm.ru
  # Web
  - PORT=8080
  - HOST=0.0.0.0
  - CORS_WHITELIST=http://localhost:3000
  - EXPRESS_BODY_PARSER_LIMIT_JSON=100kb
  - EXPRESS_BODY_PARSER_LIMIT_RAW=10mb
  # Email
  - EMAIL_SMTP=smtps://username:password@smtp.example.com/?pool=true
  - EMAIL_FROM=Bender Bending Rodr√≠guez <bender@ilovebender.com>
  # Internal
  - JWT_SECRET=jwt
  # Docker
  - COMPOSE_PROJECT_NAME=api.auction.chvcm.ru
  - COMPOSE_RESTART=no
  # PostgreSQL
  - POSTGRES_PORT=5432
  - POSTGRES_PASSWORD=postgres
  - POSTGRES_USER=postgres
  - POSTGRES_DB=postgres
  - POSTGRES_VOLUME=/mnt/alendo-api.auction.chvcm.ru-postgres-ramdisk
  # Redis
  - REDIS_PORT=6379
  - REDIS_VOLUME=/mnt/alendo-api.auction.chvcm.ru-redis-ramdisk
  # RabbitMQ
  - RABBITMQ_PORT=5672
  - RABBITMQ_PORT_WEB=15672
  - RABBITMQ_USER=guest
  - RABBITMQ_PASS=guest
  - RABBITMQ_VOLUME=/mnt/alendo-api.auction.chvcm.ru-rabbitmq-ramdisk
  # s3poxy
  - S3PROXY_PORT=4567
  - S3PROXY_ACCESS_KEY_ID=key
  - S3PROXY_SECRET_ACCESS_KEY=secret
  - S3PROXY_VOLUME=/mnt/alendo-api.auction.chvcm.ru-s3poxy-ramdisk
  matrix:
  - POSTGRES_TAG=11 REDIS_TAG=5 RABBITMQ_TAG=3-management S3PROXY_TAG=latest

install:
# Code Climate
- curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
- chmod +x ./cc-test-reporter
# Yarn
- curl -o- -L https://yarnpkg.com/install.sh | bash -s
- export PATH="$HOME/.config/yarn/global/node_modules/.bin:$HOME/.yarn/bin:$PATH" # TODO: https://github.com/tj/commander.js/issues/866
- yarn global add https://github.com/AlendoStudio/node-relebox.git
- yarn global add https://github.com/AlendoStudio/node-relebox.git # TODO: to avoid https://github.com/yarnpkg/yarn/issues/3421
- yarn install --production false

before_script:
# TODO: https://github.com/travis-ci/travis-ci/issues/4842#issuecomment-311527059
- sudo service postgresql stop
- while sudo lsof -Pi :5432 -sTCP:LISTEN -t; do sleep 1; done
# Docker
- cd docker
- docker-compose -f dc-db-dev.yml up -d
- cd ..

script: yarn test-cov

after_script:
- ./cc-test-reporter format-coverage -o "coverage/codeclimate.$TRAVIS_JOB_NUMBER.json"
- relebox upload "$RELEBOX_BUCKET_NAME" / "coverage/codeclimate.*.json"

stages:
- prepare cache
- test
- coverage
- deploy
jobs:
  include:
  - stage: prepare cache
    before_script: true
    script: relebox bucket "$RELEBOX_BUCKET_NAME"
    after_script: true
  - stage: test
    name: tslint
    before_script: true
    script: yarn lint
    after_script: true
  - stage: coverage
    before_script: true
    script:
    - relebox download "$RELEBOX_BUCKET_NAME" coverage "/codeclimate.*.json"
    - ./cc-test-reporter sum-coverage coverage/codeclimate.*.json
    - ./cc-test-reporter upload-coverage
    - relebox bucket -d "$RELEBOX_BUCKET_NAME"
    after_script: true
  - stage: deploy
    name: releases
    if: tag = true
    before_script: true
    script: true
    after_script: true
    before_deploy:
    - rm -rf dist
    - yarn pack
    - yarn build-apidoc
    - tar -cf apidoc.tgz apidoc
    - sha256sum *.tgz > SHASUMS256.txt
    - cat SHASUMS256.txt
    deploy:
      provider: releases
      file_glob: true
      api_key:
        secure: $GH_TOKEN
      file:
      - "*.tgz"
      - SHASUMS256.txt
      skip_cleanup: true
      on:
        tags: true
  - stage: deploy
    name: pages
    if: branch = master
    before_script: true
    script: true
    after_script: true
    before_deploy: yarn build-apidoc
    deploy:
      provider: pages
      local-dir: apidoc
      skip-cleanup: true
      github-token: $GH_TOKEN
      keep-history: true
      on:
        branch: master
